#!/usr/bin/make -f

SHELL=/bin/bash -e

DEBIAN=$(shell awk -F= '($$1 == "DEBIAN") { print $$2 }' <debian/debian.env)

SERIES=$(shell dpkg-parsechangelog -l$(DEBIAN)/changelog -SDistribution | sed -e 's/-\(security\|updates\|proposed\)$$//')
SOURCE=$(shell dpkg-parsechangelog -l$(DEBIAN)/changelog -SSource)
KERNEL_SOURCE=$(shell echo "$(SOURCE)" | sed -e 's/-azure-fde//')

VERSION=$(shell dpkg-parsechangelog -l$(DEBIAN)/changelog -SVersion)
KERNEL_ABI_VERSION=$(shell echo "$(VERSION)" | sed -ne 's/\([0-9]*\.[0-9]*\.[0-9]*\-[0-9]*\)\..*/\1/p')

DEB_HOST_ARCH=$(shell dpkg-architecture -qDEB_HOST_ARCH)

FLAVOURS=azure

clean: debian/control
	dh_testdir
	dh_testroot
	rm -rf debian/tmp SIGNING
	dh_clean

debian/control:
	sed <$(DEBIAN)/control.stub >debian/control			\
		-e 's/@SERIES@/$(SERIES)/g'				\
		-e 's/@KERNEL_ABI_VERSION@/$(KERNEL_ABI_VERSION)/g'	\
		-e 's/@SRCPKGNAME@/$(SOURCE)/g'				\
		-e 's/@KERNEL_SOURCE@/$(KERNEL_SOURCE)/g'
	cp $(DEBIAN)/changelog debian/changelog

.PHONY: debian/control

%:
	dh $@

override_dh_auto_build: signing = $(CURDIR)/SIGNING
override_dh_auto_build: signingv = $(signing)/$(VERSION)
override_dh_auto_build: signing_tar = $(SOURCE)_$(VERSION)_$(DEB_HOST_ARCH).tar.gz
override_dh_auto_build: outdir = $(CURDIR)/debian/tmp
override_dh_auto_build: initrd = $(outdir)/initramfs.img
override_dh_auto_build: efi = $(outdir)/kernel.efi
override_dh_auto_build:
	install -d $(signingv)/control
	mkdir -p $(outdir)
	for flavour in $(FLAVOURS); do						\
		pkg="linux-image-unsigned-$(KERNEL_ABI_VERSION)-$$flavour";	\
		(								\
			cd $(outdir);						\
			apt-get download $$pkg;					\
			dpkg-deb -x $${pkg}_*.deb $$flavour;			\
		);								\
		ubuntu-core-initramfs create-initrd --output $(initrd)		\
			--kernelver $(KERNEL_ABI_VERSION)-$$flavour;		\
		ubuntu-core-initramfs create-efi --unsigned --output $(efi)	\
			--kernel $(outdir)/$$flavour/boot/vmlinuz		\
			--kernelver $(KERNEL_ABI_VERSION)-$$flavour		\
			--initrd $(initrd);					\
		cp -p $(efi)-$(KERNEL_ABI_VERSION)-$$flavour			\
			$(signingv)/vmlinuz-$(KERNEL_ABI_VERSION)-$$flavour.efi;\
	done
	{ echo "tarball"; } >$(signingv)/control/options
	cd $(signing) && tar czvf ../../$(signing_tar) .
	dpkg-distaddfile $(signing_tar) raw-signing -

printchanges:
	@prev_ver=$$(dpkg-parsechangelog -l$(DEBIAN)/changelog -o1 -c1 -SVersion);	\
	base_commit=$$(git log --format="%H %s" | 					\
		gawk '/UBUNTU: '".*Ubuntu-.*$$prev_ver"'$$/ { print $$1; exit }');	\
	if [ -z "$$base_commit" ]; then							\
		echo "WARNING: couldn't find a commit for the previous version. Using the latest one." >&2; \
		base_commit=$$(git log --format="%H %s" | 				\
			gawk '/UBUNTU:\s*Ubuntu-.*$$/ { print $$1; exit }');		\
	fi;										\
	git log "$$base_commit"..HEAD |							\
		debian/scripts/misc/git-ubuntu-log

insertchanges:
	@perl -w -f debian/scripts/misc/insert-changes.pl debian $(DEBIAN)

startnewrelease:
	dh_testdir
	@flavour=$$(echo "$(FLAVOURS)" | cut -f1 -d' ');				\
	prev_ver=$$(dpkg-parsechangelog -SVersion);					\
	ver=$$(debian/scripts/misc/get-kernel-version $(DEB_HOST_ARCH) $$flavour);	\
	if [ "$${prev_ver%.*}" = "$${ver}" ]; then					\
		ver="$${prev_ver%.*}.$$(( $${prev_ver##*.} +1))";			\
	else										\
		ver="$${ver}.1";							\
	fi;										\
	now="$(shell date -R)";								\
	echo "Creating new changelog set for $$ver...";					\
	echo -e "$(SOURCE) ($$ver) UNRELEASED; urgency=medium\n" 			\
		>$(DEBIAN)/changelog.new;						\
	if [ "$${prev_ver%.*}" != "$${ver%.*}" ]; then					\
		echo -e "  * Master version: $${ver%.*}\n" >>$(DEBIAN)/changelog.new;	\
	fi;										\
	echo "  CHANGELOG: Do not edit directly. Autogenerated at release."		\
		>>$(DEBIAN)/changelog.new;							\
	echo "  CHANGELOG: Use the printchanges target to see the curent changes."	\
		>>$(DEBIAN)/changelog.new;							\
	echo "  CHANGELOG: Use the insertchanges target to create the final log."	\
		>>$(DEBIAN)/changelog.new;							\
	echo -e "\n -- $$DEBFULLNAME <$$DEBEMAIL>  $$now\n" >>$(DEBIAN)/changelog.new;	\
	cat $(DEBIAN)/changelog >>$(DEBIAN)/changelog.new;					\
	mv $(DEBIAN)/changelog.new $(DEBIAN)/changelog
